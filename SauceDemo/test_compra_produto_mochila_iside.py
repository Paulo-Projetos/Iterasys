# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCompraProdutoMochila():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
    self.driver.maximize_window()
    self.wait = WebDriverWait(self.driver, 10)
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_compraProdutoMochila(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    #Login
    self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "*[data-test=\"username\"]"))).send_keys("standard_user")
    self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "*[data-test=\"password\"]"))).send_keys("secret_sauce")
    self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "*[data-test=\"login-button\"]"))).click()
    #Verificar se o produto Mochila esta no carrinho
    mochila_texto = self.wait.until(EC.visibility_of_element_located((By.ID, "item_4_title_link"))).text
    assert "Sauce Labs Backpack" in mochila_texto  # Verificando texto correto
    #Verificar o preço da Mochila
    preco = self.wait.until(EC.visibility_of_element_located((By.CLASS_NAME, "inventory_item_price"))).text
    assert preco == "$29.99"  # Preço correto com ponto decimal
    # Clica no botão "Adicionar ao carrinho"
    botao_adicionar = self.wait.until(EC.element_to_be_clickable((By.ID, "add-to-cart-sauce-labs-backpack")))
    botao_adicionar.click()
    # Verifica se o carrinho tem 1 item
    quantidade_carrinho = self.wait.until(EC.visibility_of_element_located((By.CLASS_NAME, "shopping_cart_badge"))).text
    assert quantidade_carrinho == "1"
    # Clica no ícone do carrinho
    self.wait.until(EC.element_to_be_clickable((By.CLASS_NAME, "shopping_cart_link"))).click()
    # Verifica se está na página do carrinho
    titulo_carrinho = self.wait.until(EC.visibility_of_element_located((By.CLASS_NAME, "title"))).text
    assert "Your Cart" in titulo_carrinho
    # Remove o produto do carrinho
    self.wait.until(EC.element_to_be_clickable((By.ID, "remove-sauce-labs-backpack"))).click()
    # Clica no menu e faz logout
    self.wait.until(EC.element_to_be_clickable((By.ID, "react-burger-menu-btn"))).click()
    self.wait.until(EC.element_to_be_clickable((By.ID, "logout_sidebar_link"))).click()
    
  
